#----------------------------------*-sh-*--------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2018-2019 OpenCFD Ltd.
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM, licensed under GNU General Public License
#     <http://www.gnu.org/licenses/>.
#
# Script
#     have_boost
#
# Description
#     Detection/setup of Boost
#
# Requires
#     BOOST_ARCH_PATH
#
# Functions provided
#     have_boost, no_boost, echo_boost
#
# Variables set on success
#     HAVE_BOOST
#     BOOST_ARCH_PATH
#     BOOST_INC_DIR
#     BOOST_LIB_DIR
#
#------------------------------------------------------------------------------
. $WM_PROJECT_DIR/wmake/scripts/sysFunctions # General system functions

#------------------------------------------------------------------------------

# Reset variables
no_boost()
{
    unset HAVE_BOOST BOOST_INC_DIR BOOST_LIB_DIR
    return 0
}


# Report
echo_boost()
{
    echo "boost=${HAVE_BOOST:-false}"
    echo "root=$BOOST_ARCH_PATH"
    echo "include=$BOOST_INC_DIR"
    echo "library=$BOOST_LIB_DIR"
}


# On success, return 0 and export variables
# -> HAVE_BOOST, BOOST_INC_DIR, BOOST_LIB_DIR
have_boost()
{
    local prefix header library static settings warn
    # warn="==> skip boost"

    # Setup - from the current environment

    # Location
    prefix="$BOOST_ARCH_PATH"

    # Header/library names
    header="boost/version.hpp"
    library="libboost_system$extLibso"

    # ----------------------------------
    if isNone "$prefix"
    then
        [ -n "$warn" ] && echo "$warn (disabled)"
        return 1
    elif hasAbsdir "$prefix"
    then
        header=$(findFirstFile "$prefix/include/$header")

        library=$(findFirstFile \
            "$(thirdExtLib $library)" \
            "$prefix/lib/$library" \
            "$prefix/lib$WM_COMPILER_LIB_ARCH/$library" \
        )
    elif isSystem "$prefix"
    then
        prefix=/usr
        header=$(findFirstFile "/usr/local/include/$header" "/usr/include/$header")
        case "$header" in (/usr/local/*) prefix=/usr/local ;; esac

        library=$(findFirstFile \
            "$prefix/lib/$library" \
            "$prefix/lib$WM_COMPILER_LIB_ARCH/$library" \
        )
    else
        unset prefix header library
    fi
    # ----------------------------------

    # Header found?
    [ -n "$header" ] || {
        [ -n "$warn" ] && echo "$warn (no header)"
        return 2
    }

    # Library found?
    [ -n "$library" ] || {
        [ -n "$warn" ] && echo "$warn (no library)"
        return 2
    }


    header="${header%/*}"   # Strip one-level (include/boost/...)

    # OK
    export HAVE_BOOST=true
    export BOOST_ARCH_PATH="$prefix"
    export BOOST_INC_DIR="${header%/*}"     # Basename
    export BOOST_LIB_DIR="${library%/*}"    # Basename
}


# Force reset of old variables
no_boost

# Testing
if [ "$1" = "-test" ]
then
    have_boost
    echo_boost
fi

#------------------------------------------------------------------------------
